#LyX 1.6.5 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\use_default_options true
\begin_modules
theorems-ams
\end_modules
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "BGP AS / ISP Security Ranking"
\pdf_author "Raphaël Vinot"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref page
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 4cm
\topmargin 3cm
\rightmargin 4cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
BGP AS / ISP Security Ranking
\end_layout

\begin_layout Author
Raphaël Vinot
\end_layout

\begin_layout Date
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 4cm
\end_inset


\end_layout

\begin_layout Abstract
For an Internet Service Provider, AS numbers are a logical representation
 of the other ISP peering or communicating with his autonomous system.
 ISP customers are using the capacity of the Internet Service Provider to
 reach Internet services over other AS.
 Some of those communications can be malicious (e.g.
 due to malware activities on an end-user equipments) and hosted at specific
 AS location.
 In order to provide an improved security view on those AS numbers, a trust
 ranking scheme will be implemented based on existing datasets of compromised
 systems, malware C&C IP and existing datasets of the ISPs.
\end_layout

\begin_layout Abstract
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Abstract
BGP ranking is a free software to calculate the security ranking of a specific
 AS number.
 The system is gathering external datasources (e.g.
 dshield, shadowserver, Arbor ATLAS) to calculate the ranking over time.
 The purpose is to show the malicious activities of a specific AS and maybe
 limits its impact on other ASes.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part
Context, motivation and non-technical view
\end_layout

\begin_layout Section
Context
\end_layout

\begin_layout Subsection
Internet and the peering
\end_layout

\begin_layout Standard
Internet is not a centralized network but a bunch of operators, each operator
 has his proper network and they exchange traffic together.
 This exchange is called 
\emph on
peering
\emph default
.
 Without this exchanges, Internet cannot work.
 
\end_layout

\begin_layout Standard
There is three different types of peering:
\end_layout

\begin_layout Itemize
Transit: you pay a provider to provide you a transit across his network
\end_layout

\begin_layout Itemize
Peer: you exchange traffic with an other provider freely for 
\emph on
mutual benefit
\end_layout

\begin_layout Itemize
Customer: you sell an access across your network to your customers
\end_layout

\begin_layout Standard
The first of all 
\emph on
mutual benefits
\emph default
 between two peers will be the reduction of the costs of the exchanges.
 But it will also provide redundancy, improve the capacity of each network
 by increasing the number of possible routes and globally improve the performanc
es.
 
\end_layout

\begin_layout Standard
Two ISPs of the same size exchange traffic freely but when they need to
 exchange traffic with bigger providers (upstream providers), they will
 obviously have to pay.
 When a smaller provider (downstream provider) want to do peering with an
 ISP, he will pay too.
 
\end_layout

\begin_layout Subsubsection
Border Gateway Protocol (BGP)
\end_layout

\begin_layout Standard
The Border Gateway Protocol is the protocol used by everyone on the Internet,
 without knowing it exists.
 This protocol is commonly presented as the routing protocol of the Internet,
 all the core routers of the Internet are using it to communicate together.
 It is a path vector protocol: the routing table contains the destination
 network, the next router on the way to this network and the path (in this
 case, the list of ASNs) to reach the destination.
\end_layout

\begin_layout Standard
In the practice, every router maintains a routing table to associate a network
 with the path of Autonomous system (AS) to this network, there is an example
 of entry 
\begin_inset CommandInset ref
LatexCommand vpageref
reference "Example-of-BGP"

\end_inset

.
 
\end_layout

\begin_layout Standard
There is always more than one possible route to reach a particular network,
 the decision is made using the path but also the network policies.
 On a security point of view, we can for example blackhole the traffic to
 a certain destination known as providing a Command & Control server and
 block the communication between this server and the clients, or to protect
 a destination under DDoS attack.
\begin_inset CommandInset citation
LatexCommand cite
key "BGP-policies"

\end_inset


\end_layout

\begin_layout Subsubsection
Autonomous system (AS)
\end_layout

\begin_layout Standard
The operators on the Internet exchange their routes, it is obvious that
 this operators need a way to identify each other without using IP Addresses.
 That is why there are Autonomous systems numbers (ASN), an operator which
 wants to announce IP Addresses on the Internet needs at least one ASN,
 an ASN will announce one or more networks.
\end_layout

\begin_layout Standard
The ASNs are assigned by the IANA to the Regional Internet Registries (RIRs)
 which will sell them to the operators.
 The RIR responsible for the Europa region is RIPE-NCC.
\end_layout

\begin_layout Subsection
Resources
\end_layout

\begin_layout Subsubsection
Routing Information Service (RIS)
\end_layout

\begin_layout Standard
This service is described like this on the website
\begin_inset CommandInset citation
LatexCommand cite
key "RIS"

\end_inset

 : 
\end_layout

\begin_layout Quote
RIS is a RIPE NCC project that collects and stores Internet routing data
 from several locations around the globe.
 RIS offers tools that bring this data to the Internet community.
\end_layout

\begin_layout Standard
The service provide a dump of the routing database directly extracted from
 their routers.
 This dump is exported each eight hours and contains around 350.000 different
 routes.
 An other very important point to keep in good memory is that the routes
 are volatile, each new version of the routing database has between 800
 and 1000 changes.
 A change is a new route: an ASN announce a new network or a dropped route:
 the network is not announced by this ASN anymore.
 Thanks to this dump , it is possible to compute the number of IP addresses
 assigned to each ASN.
\end_layout

\begin_layout Standard
If you want to see graphs and visualize the evolution of the routes by as
 and by networks, you should visit the Routing Information Service website
 
\begin_inset CommandInset citation
LatexCommand cite
key "RIS"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
This service allow also to fetch in real time the ASN assignation of an
 IP address.
 And usually to get a small textual description of this AS.
 
\end_layout

\begin_layout Subsubsection
Whois 
\end_layout

\begin_layout Standard
The well-known whois protocol allows us to fetch information on the owners
 of IP addresses.
 Even if the malicious ISP controls some objects of the whois entries (e.g.
 route-object updated by a bot master), they can be considered as datasets
 because it will give us information on the bot master.
\end_layout

\begin_layout Standard
A whois entry contains much more information than a riswois entry but is
 not so often updated, about once a week.
 The most interesting information you can find in the whois entry is the
 name of the owner of the block of IPs with his address and phone number.
 
\end_layout

\begin_layout Standard
We should speak of whois databases and not whois database because there
 are many servers providing different databases: each RIR maintain a whois
 database with the information he wants.
 To get the most precise information on a particular IP Address, it is important
 to query the right server.
 The implementations of whois clients maintain an list of assignations to
 know for each IP what is the server to query.
 The implementation of Debian contains also the whois servers of some Local
 Internet Registries (LIRs), a subdivision of the RIRs.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
Almost all the databases are incompatible with each other, the keys and
 the information is different.
\end_layout

\begin_layout Subsubsection
Datasets of suspicious activities
\end_layout

\begin_layout Standard
It is possible to find some datasets freely available on the Internet but
 a lot are not and that for different reasons:
\end_layout

\begin_layout Itemize
protection of the sources: each company has his proper way to gather information.
 If the attacker know this methods, he will attempt to be more stealthy
 and it will be more complicated for the company to find him again
\end_layout

\begin_layout Itemize
the company providing the dataset sells this information to the ISPs which
 have interest in it 
\end_layout

\begin_layout Standard
It exists a large variety of datasets including IP and/or prefixes for malicious
 activities.
 But their level of trust is variable, the methods used to generate the
 datasets can vary a lot from a source to another .
 To be exhaustive on this description of the datasets we have to say that
 many data sources gives only information on a particular ASN.
\end_layout

\begin_layout Paragraph
Arbor ATLAS/Active Threat Feed
\end_layout

\begin_layout Standard
The dataset provided by Arbor is not freely available and their quality
 is quite high because the reports are analyzed and classified.
 Arbor gives information on it in his FAQ
\begin_inset CommandInset citation
LatexCommand cite
key "Arbor-faq"

\end_inset

: 
\end_layout

\begin_layout Quote
Data is captured by using a distributed network of sensors running a number
 of data capture and analysis tools.
 These sensors can:
\end_layout

\begin_layout Quote
- Interact with attackers to discover what activity they are attempting
 
\end_layout

\begin_layout Quote
- Capture full payloads and classify them 
\end_layout

\begin_layout Quote
- Characterize scan traffic to know the reputation of the traffic he is
 routing and mitigate the malicious activities originating from their customers.
 
\end_layout

\begin_layout Standard
And this information are merged with logs, statistics and reports to have
 an exhaustive view of the threads and reduce the false positives.
\end_layout

\begin_layout Description
Dshield The lists of Dshield are public and they are generated using only
 the firewall logs of the users 
\begin_inset CommandInset citation
LatexCommand cite
key "Dshield-about"

\end_inset

, the precision and the quality is less good than for Arbor but there is
 however a small analyze because Dshield provide two lists: the first one
 is a full dump of the today's information, no filtered at all and contains
 around one million entries, and many false positives like private address.
 But this list stays interesting because of the big amount of IPs it contains
 and it is useful to correlate it with other sources.
 
\end_layout

\begin_layout Standard
The second contains only the "Top 100" of the daily dump and less false
 positive but should not be used as blocklist says Dshield.
 
\end_layout

\begin_layout Paragraph
abuse.ch ZeuS Tracker
\end_layout

\begin_layout Standard
This list is only concentrated on one unique thread: ZeuS.
 On the FAQ, ZeuS is described like this
\begin_inset CommandInset citation
LatexCommand cite
key "ZeuS-faq"

\end_inset

: 
\end_layout

\begin_layout Quotation
ZeuS (also known as Zbot / WSNPoem) is a crimeware kit, which steals credentials
 from various online services like social networks, online banking accounts,
 ftp accounts, email accounts and other (phishing).
 The web admin panel can be bought for 700$ (source: RSA Security 4/21/2008)
 and the exe builder for 4'000$ (source: Prevx 3/15/2009).
\end_layout

\begin_layout Standard
The detection of ZeuS Command&Control servers is done by traffic sniffing
 and study of the captured (in Honeypots) Zeus clients.
 This list contains all known ZeuS Command&Control servers and is expected
 to be used as a blocklist, it is highly reliable.
 
\end_layout

\begin_layout Description
Shadowserver The mission of the Shadowserver Foundation is presented like
 this on the website: 
\end_layout

\begin_layout Quote
The Shadowserver Foundation is an all volunteer watchdog group of security
 professionals that gather, track, and report on malware, botnet activity,
 and electronic fraud.
 It is the mission of the Shadowserver Foundation to improve the security
 of the Internet by raising awareness of the presence of compromised servers,
 malicious attackers, and the spread of malware.
 
\end_layout

\begin_layout Standard
They are working the same way as Arbor by providing reports on particular
 AS, only to the members but they does not have to pay for it.
\end_layout

\begin_layout Description
Abusix It is completely different: Abusix does not provide list but permit
 to find easily the abuse address of a provider by the IP address of the
 attacker, will send a mail to this address and tell what the problem is
 and on what IP address.
 The data coming from Abusix are usually good but should be verified because
 it is always possible to report a false positive.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
This raw-datasets will be aggregated and analyzed to see their evolution
 in the time and generate statistics.
\end_layout

\begin_layout Subsection
Threats
\end_layout

\begin_layout Standard
Internet has always been an interesting place for the cybercriminals: virus
 and attack on Information Systems exists since the computers exist but
 now that almost everybody can have an Internet access (with a computer
 or a mobile device) it is a way more easy for the attackers to gain access
 to more computer: for a vast majority of the population IT security is
 absolutely not in their scope and they have no clue on it.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
In the past, the malwares were often used to beak a computer or make them
 crash.
 Not anymore: already in 2007, Kaspersky proclaim the 
\emph on
death of "non-profit" malicious software
\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "non-profit-malware"

\end_inset

.
 Now this activity is a real business with organizations doing malwares,
 administrating Botnets for their own needs or renting a part of the botnet
 to clients 
\begin_inset CommandInset citation
LatexCommand cite
key "sell botnet"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
One of the most used way to commit illegal activities on the Internet these
 days are the Botnets.
 
\end_layout

\begin_layout Subsubsection
Botnet
\end_layout

\begin_layout Standard
A botnet is a network of devices (Bots) infected by a malware which are
 controlled by a Command & Control Server and administrated by a Botmaster.
 The Botmaster is often an organization which rent a certain amount of infected
 computers to performs suspicious activities.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename botnet.dia
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Botnet - Basics
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A botnet may be used to perform DDOS attack on servers, exchange data, provide
 phishing sites, send Spam, distribute Malwares and many other.
 
\end_layout

\begin_layout Standard
The big advantage for the cybercriminals is that they are (virtually) invisible
 because they never attack directly their targets and are never seen as
 attacker in the logfiles.
 An other advantage is that it costs almost nothing to them: they does not
 need to earn thousand computers, they just need to develop a malware and
 let it working.
 
\end_layout

\begin_layout Subsubsection
Usage of the network
\end_layout

\begin_layout Standard
The Bot-master will communicate with his Bots to give orders, the bots will
 sometime communicate together (P2P based botnet
\begin_inset CommandInset citation
LatexCommand cite
key "p2p-botnet"

\end_inset

) and they will attack their targets in case of DDoS or the victims will
 come on the servers in case of phishing.
\end_layout

\begin_layout Standard
As we can see, the communication is the key of a Botnet.
 We can easily understand that if we are able to stop the communication
 between the master and the bots, or know the members of the botnet and
 do not browse on websites hosted on them, the botnet will be armless.
 This techniques are called black-holing: all the data coming or to the
 designated hosts will be silently dropped.
 
\end_layout

\begin_layout Subsection
Monitoring the network
\end_layout

\begin_layout Standard
As we can see, there is a gap between the world where everybody will peer
 together without any control, just to make Internet faster and the real
 world where there is Botnets and companies selling those to perform DDoS,
 send Spams and provide phishing websites.
 We need a way to be able to know what is happening in his network and respond
 to the attacks.
 
\end_layout

\begin_layout Subsubsection
Confidence
\end_layout

\begin_layout Standard
An other point to keep in good memory is that the Internet is based on confidenc
e...
 but confidence without any control will not work: if an ISP decide that
 he does not care what is happening on his network he may be blacklisted
 by the other ISPs.
 Or at least his bandwidth will be reduced, even if the the suspicious traffic
 is originating from a third ISP.
 
\end_layout

\begin_layout Standard
This is why it is a necessity for each Internet operator to know what for
 traffic he is routing.
 This task is critical for every ISP and of course for the satellite operators
 too: they often provide an Internet access to their customers.
\end_layout

\begin_layout Subsubsection
Reputation and ranking system 
\end_layout

\begin_layout Standard
To know the reputation of the traffic he is routing and mitigate the malicious
 activities originating from their customers, an ISP can for example use
 a ranking system based on datasets of suspicious activities.
\end_layout

\begin_layout Standard
There are at least three goals which can be achieved by using a ranking
 system: 
\end_layout

\begin_layout Itemize
Disrupting the malware Command & Control communication: 
\end_layout

\begin_deeper
\begin_layout Itemize
drop all the traffic from and/or to an AS or a network (blackholing)
\begin_inset CommandInset citation
LatexCommand cite
key "blackhole-malware"

\end_inset


\end_layout

\begin_layout Itemize
modify the performance and/or the bandwidth of the traffic coming from and
 to the C&C server (traffic shaping)
\end_layout

\end_deeper
\begin_layout Itemize
Limiting the 
\emph on
effectiveness
\emph default
 of the Botnet, reduce the propagation of the malware by informing the other
 ISPs or the customers that a particular AS is a bad peer or that the websites
 hosted there should not be trusted
\end_layout

\begin_layout Itemize
Assessment between ISPs: the ranking can be influenced by other ISPs and
 it is possible to improve or limit the peering with an other ISP 
\end_layout

\begin_layout Standard
To monitor properly the network, we need to aggregate information coming
 from different sources and analyze it.
 
\end_layout

\begin_layout Subsection
Key points in the analysis 
\end_layout

\begin_layout Standard
The data are coming from different sources, it is important because this
 sources sources will cover different threads ant it will allow us to have
 a more global overview on the malicious ASNs.
\end_layout

\begin_layout Standard
To classify properly the information, the least common denominator, present
 in each datasets: CIDR block and / or ASN.
\end_layout

\begin_layout Subsubsection
Size and quality 
\end_layout

\begin_layout Standard
As we saw, we have some poor-quality sources but with a lot of entries they
 are very useful to see trends.
 The other, with an higher quality but less entries will be used to emphasize
 the trends of the first sources: they have already been analyzed and contains
 much less false positive.
 It is the first and most important point of the analysis: we have to be
 able to make the difference between the low-quality entries and the high-qualit
y one.
 
\end_layout

\begin_layout Description
Solution This differentiation will be done by using a weight on each entries:
 the best sources will have an high weight and the other a lower one.
 Like this, they will not be lost in the other datasets.
 
\end_layout

\begin_layout Subsubsection
Format 
\end_layout

\begin_layout Standard
Every dataset has his proper format, they are obviously incompatible from
 one data sources to another: we will find plain text, CSV and XML files.
 Some files contains only the ip addresses, some other the type of the attack
 and a timestamp.
 Some files are updated every couple hours, most of them every 24 hours.
 But the insertion in the database has to be same for every source.
\end_layout

\begin_layout Description
Solution Every source will have his proper module, extracting the needed
 information of the files and return this in formations to a standard interface
 which will insert it in the database.
 This way, the overhead induced by the new datasets will be highly reduced.
 More in formations on this particular point 
\begin_inset CommandInset ref
LatexCommand vpageref
reference "sec:Modules"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Type of the information
\end_layout

\begin_layout Standard
Last but not least, some of the datasets contains only information on a
 particular AS.
 We already spoke of this datasets: they are usually provided by companies
 selling this in formations to ISPs.
 This datasets may badly influence the results by increasing the weight
 of a particular AS.
 
\end_layout

\begin_layout Description
Solution It is actually not fully implemented but the goal will be to offer
 to each ISP interested by this system to obtain an account on the website
 and manage this datasets on the way he wants: compare the datasets with
 the global data or have a view on the evolution of his ASN.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
After all this theoretical part, we will now give you a small overview of
 the system without too much details of the implementation.
 But it will allow you to have a better view of the basic principles and
 the architecture of the system and on the requirements imposed by the future
 usages.
\end_layout

\begin_layout Section
Implementation 
\end_layout

\begin_layout Standard
After this exhaustive presentation of the context, it is now time to give
 some information on the implementation and what are the requirements of
 the application.
 
\end_layout

\begin_layout Standard
The high-level diagram of the implementation is available 
\begin_inset CommandInset ref
LatexCommand vpageref
reference "fig:High-level"

\end_inset

.
\end_layout

\begin_layout Subsection
Highlights
\end_layout

\begin_layout Standard
There are two requirement on this project: the code has to be opensource
 and as fast as possible to allow to use the results on a corporate network.
\end_layout

\begin_layout Subsubsection
License
\end_layout

\begin_layout Standard
The whole project is opensource because its purpose is to allow every company
 interested by this project to use it.
 But we also want that if this companies use the code and make modifications,
 they participate to the project.
 
\end_layout

\begin_layout Standard
That's why we choose a GPL license and more precisely the version 3 of the
 Affero GPL.
 The advantage of this license (Affero) is that if someone want to use the
 system and only allow the users to use it over the network, he will have
 to release the code 
\begin_inset CommandInset citation
LatexCommand cite
key "mongodb-agpl"

\end_inset

.
 It is not the case for the standard version of the GPL but for this project,
 it is very important because the system will most of the time / always
 be accessed through the network.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Description
Note the code of the system is released opensource 
\begin_inset CommandInset citation
LatexCommand cite
key "BGP Ranking"

\end_inset

, not the datasets and the results, for the reasons exposed above.
 
\end_layout

\begin_layout Subsubsection
Usages and consequences
\end_layout

\begin_layout Standard
The code will be used to filter the network flow: 
\end_layout

\begin_layout Itemize

\emph on
divert filtering
\emph default
: the packets will be stopped, send to the userspace, analyzed, modified,
 whatever and may be pushed back into the IP stack 
\begin_inset CommandInset citation
LatexCommand cite
key "divert_filter"

\end_inset

 
\end_layout

\begin_layout Itemize

\emph on
blackhole filtering
\emph default
: the packet are silently dropped 
\end_layout

\begin_layout Standard
To achieve this goal it is possible to use flow spec
\begin_inset CommandInset citation
LatexCommand cite
key "Flowspec"

\end_inset

: it is a Quality of Service but for the BGP protocol.
 This RFC allows for example to increase or decrease the priority of the
 traffic originating from a particular Subnet or AS.
 
\end_layout

\begin_layout Standard
Flow spec can also be used to do ingress filtering on the border of the
 ISP infrastructure.
 If the source IP address of a flux is not in the range announced by the
 originating AS, the traffic will be discarded, even if this traffic comes
 from
\emph on
 'behind' an Internet Service Provider's (ISP) aggregation point
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "ingress_filter"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
The first consequence is that the process of computing the ranking of an
 AS (and later of a subnet) has to be fast enough to allow the user to manipulat
e the traffic originating from a malicious source when it is detected in
 the datasets.
 The definition of 
\emph on
fast enough
\emph default
 depends on the the frequency of the update of the sources.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
The solution we decide to use is to do a 
\emph on
mapreduce
\emph default
-like processing
\begin_inset CommandInset citation
LatexCommand cite
key "Mapreduce"

\end_inset

: it means to be able to run as often as possible more than one process
 on the same task.
 To do it, we will share the information between the processes using a key/value
 storage server called redis 
\begin_inset CommandInset citation
LatexCommand cite
key "redis_official"

\end_inset

.
\end_layout

\begin_layout Subsection
High-level view
\end_layout

\begin_layout Standard
The ranking system can be reduced as two different parts: the aggregations
 of the data and the ranking himself.
 
\end_layout

\begin_layout Subsubsection
Aggregation
\end_layout

\begin_layout Standard
The first data inserted into the database will be the one from the datasets,
 typically the IP Addresses.
 At the same time, two other processes will find in the database all the
 new entries by looking for the one without RIS and Whois entries and fetch
 the most up-to-date available information from the Internet.
 
\end_layout

\begin_layout Standard
The most important information to fetch is the RIS Whois entry because it
 contains the ASN announcing the IP and the block of the IP.
 Both of this information are very important because even if the ranking
 is actually only based on the ASNs, it is planned to implement a ranking
 based on the subnets.
 
\end_layout

\begin_layout Description
Note it is possible to deactivate the fetching of the whois entries in the
 configuration: it is only useful to have complementary information on a
 particular IP address but this fetching takes quite a lot of time (see
 
\begin_inset CommandInset ref
LatexCommand vpageref
reference "sec:Whois-server"

\end_inset

 for more information) and use an huge amount of space in the database.
 
\end_layout

\begin_layout Standard
It is deactivated by default.
 
\end_layout

\begin_layout Subsubsection
Ranking
\end_layout

\begin_layout Standard
Based on the data in the database, we will be able to compute the ranking
 
\emph on
for one ASN
\emph default
 with the following formula: 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard

\size largest
\begin_inset Formula $R=1+\frac{\left(SUM\left(Occurrences*source\_impact\right)*SUM\left(Vote\right)\right)}{AS\_Size}$
\end_inset


\end_layout

\begin_layout Description
Occurrences all the IPs from the ASN, by sources.
 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
Each Occurrence per source is unique even if we see multiple the same IP
 address for the same source.
\end_layout

\begin_layout Description
Source_impact
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
 the value assigned to the source, it will depend of his quality
\end_layout

\begin_layout Description
Vote the vote against this AS given by an other user of the system (actually
 not implemented)
\end_layout

\begin_layout Description
AS_Size The number of IPs announced by the AS when the ranking is computed
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
We can see the same IP address among the different sources, the formula
 is not limiting that as this is usually a good sign of malicious activities:
 the information is validated by multiple sources.
\end_layout

\begin_layout Description
Note Only The ISPs allowed to access to the system will are able to vote
 against other ISPs.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
This index will be used by the ISP to know if his customers are suspicious
 or not and investigate if necessary
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
enlargethispage{1cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways true
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename basics/highlevel.dia
	lyxscale 50
	scale 40
	scaleBeforeRotation
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:High-level"

\end_inset

High level
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part
BGP AS / ISP Security Ranking
\end_layout

\begin_layout Section
Data storage
\end_layout

\begin_layout Standard
We have two types of data to store in this project: 
\end_layout

\begin_layout Itemize
static information: they are written one time in the database and never
 updated/deleted after anymore, only read.
 The performances are not really important, we use a relational database.
\end_layout

\begin_layout Itemize
temporary, volatile information: they are written/updated/deleted very often
 and need a fast access.
 A key/value storing solution is a good choice.
 
\end_layout

\begin_layout Subsection
Relational database
\end_layout

\begin_layout Standard
The software supports officially MySQL as relational database but because
 we are using the python module 
\emph on
SQLAlchemy
\emph default
, all the databases supported by it may be used
\begin_inset CommandInset citation
LatexCommand cite
key "SQLAlchemy-dbs"

\end_inset

.
 Be aware that depending on the database you will use, you might experience
 some (performance) problems, mostly if you decide to use SQLite.
 But PostgreSQL for example should work fine.
 
\end_layout

\begin_layout Standard
This database contains actually all the static informations used by the
 ranking system.
 Static information means all the information extracted of the datasets
 and the whois entries, when they are in the database, they will never be
 modified anymore.
 The voting informations are also saved into this database as well as the
 history of the ranking used to generate the graphes.
 
\end_layout

\begin_layout Standard
On top of 
\emph on
SQLAlchemy
\emph default
, the module 
\emph on
elixir
\emph default
 is used because it implements the active record pattern
\begin_inset CommandInset citation
LatexCommand cite
key "active-record"

\end_inset

: it allow the developer to see the entries of the database as objects and
 simplify a lot the usage of the databases.
 The most important point is that we will never use any SQL Queries.
 On a security point of view, it will reduce the risk of SQL injections.
 
\end_layout

\begin_layout Description
Note the users will never write anything in the database and have a read
 only access through the web interface: all the write process is done by
 the scripts we will explain in the next part of this document.
 
\end_layout

\begin_layout Subsection
Key/value store
\end_layout

\begin_layout Standard
The Key/value store used by this software is Redis.
 Depending on the part of the program, Redis is used differently:
\end_layout

\begin_layout Subsubsection
Shared memory
\end_layout

\begin_layout Standard
The whole program use a lot of processes and most of them need to exchange
 information.
 It would be possible to use a classical shared memory between processes
 but it is a lot easier to put all the information in a shared database
 which will deal on his side with the problem of the simultaneous access
 to the ressources.
 
\end_layout

\begin_layout Standard
The process which need this information will pick them, do his work and
 give the result to the next process through the same or an other database.
 
\end_layout

\begin_layout Subsubsection
Caching
\end_layout

\begin_layout Standard
It is common that an IP address is present more than one time in a dataset,
 or the same IP in different datasets.
 It is important to know that the whois entries have a life time of at least
 24 hours: they are not updated that often on the whois servers.
 That is why a caching system is very useful to improve the performance
 of the software: it is absolutely unnecessary to fetch more than one time
 a particular whois entry for at least 24 hours.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
Redis implements a time to live command, we just have to give a TTL of 24
 Hours to each cached entry and it will be automatically deleted after that
 amount of time.
 
\end_layout

\begin_layout Subsubsection
Fast access
\end_layout

\begin_layout Standard
The other usage of Redis is quite obvious: we need to be able to do a lot
 of queries in a small period of time.
 It is the case for the the whois database for example: the most we do queries
 per second, the fastest we update the ranking database.
 
\end_layout

\begin_layout Standard
Redis provide a command called redis-benchmark, it gives the following results
 with the code present on the master branch of today (27.08.2010) on our test
 server: 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code

\size small
$ ./redis-benchmark -q 
\end_layout

\begin_layout LyX-Code

\size small
PING: 45477.27 requests per second
\end_layout

\begin_layout LyX-Code

\size small
PING (multi bulk): 50545.45 requests per second
\end_layout

\begin_layout LyX-Code

\size small
SET: 53475.94 requests per second
\end_layout

\begin_layout LyX-Code

\size small
GET: 52408.38 requests per second
\end_layout

\begin_layout LyX-Code

\size small
INCR: 51287.18 requests per second
\end_layout

\begin_layout LyX-Code

\size small
LPUSH: 53545.45 requests per second
\end_layout

\begin_layout LyX-Code

\size small
LPOP: 52392.67 requests per second
\end_layout

\begin_layout LyX-Code

\size small
SADD: 52652.63 requests per second
\end_layout

\begin_layout LyX-Code

\size small
SPOP: 51020.41 requests per second
\end_layout

\begin_layout LyX-Code

\size small
LPUSH (again, in order to bench LRANGE): 53223.40 requests per second
\end_layout

\begin_layout LyX-Code

\size small
LRANGE (first 100 elements): 4835.59 requests per second
\end_layout

\begin_layout LyX-Code

\size small
LRANGE (first 300 elements): 1786.67 requests per second
\end_layout

\begin_layout LyX-Code

\size small
LRANGE (first 450 elements): 1249.69 requests per second
\end_layout

\begin_layout LyX-Code

\size small
LRANGE (first 600 elements): 932.05 requests per second
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
The test server is a Intel(R) Xeon(R) (Quad Core) with 2.66GHz per core,
 8Gb RAM and running Ubuntu 10.4.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
Redis define several types of values 
\begin_inset CommandInset citation
LatexCommand cite
key "Redis-types"

\end_inset

 the following types are used in the software: 
\end_layout

\begin_layout Description
String it is the simplest type: we just put into the database a key and
 a value.
 
\end_layout

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code

\size small
$ ./redis-cli set mykey "my binary safe value"
\end_layout

\begin_layout LyX-Code

\size small
OK
\end_layout

\begin_layout LyX-Code

\size small
$ ./redis-cli get mykey
\end_layout

\begin_layout LyX-Code

\size small
my binary safe value
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Description
Set it is a list of elements but each element is unique
\end_layout

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code

\size small
$ ./redis-cli sadd myset 1
\end_layout

\begin_layout LyX-Code

\size small
(integer) 1
\end_layout

\begin_layout LyX-Code

\size small
$ ./redis-cli sadd myset 2
\end_layout

\begin_layout LyX-Code

\size small
(integer) 1
\end_layout

\begin_layout LyX-Code

\size small
$ ./redis-cli sadd myset 3
\end_layout

\begin_layout LyX-Code

\size small
(integer) 1
\end_layout

\begin_layout LyX-Code

\size small
$ ./redis-cli smembers myset
\end_layout

\begin_layout LyX-Code

\size small
1.
 3
\end_layout

\begin_layout LyX-Code

\size small
2.
 1
\end_layout

\begin_layout LyX-Code

\size small
3.
 2
\end_layout

\end_inset


\end_layout

\begin_layout Section
Implementation, Technical overview
\end_layout

\begin_layout Standard
You can find directly the global diagram representing the whole architecture
\begin_inset CommandInset ref
LatexCommand vpageref
reference "fig:Technical-global-view"

\end_inset

.
\end_layout

\begin_layout Subsection
MySQL databases
\end_layout

\begin_layout Standard
Two databases are in use: the first one contains only the data of the datasets.
 The second one, the results of the ranking and the voting informations.
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
improvement: merge the two databases
\end_layout

\begin_layout Plain Layout
use the sources db in the ipdesc db 
\end_layout

\begin_layout Plain Layout
use the ASN db in the histo db 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Data from the datasets
\end_layout

\begin_layout Standard
The database contains the the following tables: 
\end_layout

\begin_layout Description
IPs contains only the IPs extracted of the datasets.
 For each entry, the IP is the primary key.
\end_layout

\begin_deeper
\begin_layout Standard
This table allow us to dump easily all the IPs we found in the datasets.
\end_layout

\end_deeper
\begin_layout Description
IPsDescriptions for each ip found in the datasets, we create a new entry
 in this table.
 
\end_layout

\begin_deeper
\begin_layout Standard
The following information are extracted of the dataset, if they exists:
 
\end_layout

\begin_layout Itemize
The name of the class where the ip is coming from.
 This name has to be unique for each class: it will be used for the ranking
\end_layout

\begin_layout Itemize
The timestamp of the insertion into the database: it is most of the time
 the current day but it can also be used to reimport old datasets, this
 functionality is actually not implemented.
 See 
\begin_inset CommandInset ref
LatexCommand vpageref
reference "sub:Importing-old-datasets"

\end_inset

 for more informations
\end_layout

\begin_layout Itemize
The date of generation of the list: it is the date given by the file or
 set to the current day if we don't have enough information
\end_layout

\begin_layout Itemize
The number of times the the same ip is present in the same dataset.
\end_layout

\begin_deeper
\begin_layout Description
Note if there is in the dataset a timestamp for each entry, we will create
 a new description each time, even if the same IP is present more than once.
\end_layout

\end_deeper
\begin_layout Itemize
The type of the infection
\end_layout

\begin_layout Itemize
Other raw information given by the dataset
\end_layout

\begin_layout Standard
The following information are set in the next part of the processing: 
\end_layout

\begin_layout Itemize
The whois entry
\end_layout

\begin_layout Itemize
The source of the whois entry
\end_layout

\begin_layout Itemize
Information on the ASN announcing the IP
\end_layout

\end_deeper
\begin_layout Description
ASNs is the same as the IPs table: it contains only the ASNs and for each
 entry, the ASN is the primary key.
\end_layout

\begin_deeper
\begin_layout Standard
This table allow us to dump easily all the ASNs of all the IPS we found
 in the datasets.
\end_layout

\end_deeper
\begin_layout Description
ASNsDescriptions a new entry is created if there is any new information
 of if an information is updated.
 
\end_layout

\begin_deeper
\begin_layout Standard
The following information are extracted of the RIS whois entries: 
\end_layout

\begin_layout Itemize
The owner announcing the ip-block containing the IP 
\end_layout

\begin_layout Itemize
The IP block 
\end_layout

\begin_layout Itemize
The source of the RIS whois entry
\end_layout

\begin_deeper
\begin_layout Standard
It will always be riswhois.ripe.net but in the future, we may decide to use
 a BGP session directly on a router.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
move it to 'future improvements' ? 
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Subsubsection
Ranking and Voting 
\end_layout

\begin_layout Standard
The two tables used to display the graphes are the following: 
\end_layout

\begin_layout Description
Sources contains only the names of the sources we can find in the database.
 For each entry, the source name is the primary key.
\end_layout

\begin_deeper
\begin_layout Standard
It is used to display the results by source.
\end_layout

\end_deeper
\begin_layout Description
History contains the information needed to display the graphs and the one
 used to compute a report
\end_layout

\begin_deeper
\begin_layout Itemize
the ASN of this rank
\end_layout

\begin_layout Itemize
the timestamp of the entry, set to the creation time
\end_layout

\begin_layout Itemize
the rank in IPv4 and IPv6
\end_layout

\begin_deeper
\begin_layout Description
Note this rank is unbalanced: it allows us to modify the weight of each
 source in real time
\end_layout

\begin_layout Description
\begin_inset Note Note
status open

\begin_layout Plain Layout
IMPROVEMENT: change the weight through the website 
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
There is also two other tables, user and votes.
 They are actually not used but will allow us in a near future to implement
 the voting functionality, for the authorized users.
 
\end_layout

\begin_layout Description
Users user database, used for the login.
 Contains only a user name and a password.
 
\end_layout

\begin_layout Description
Votes Save the history of the votes, contains the ASN and the value of the
 vote.
 It will also be possible to put a commentary.
 
\end_layout

\begin_layout Subsection
Data Aggregation 
\end_layout

\begin_layout Subsubsection
Fetching the datasets
\end_layout

\begin_layout Standard
It is not the case for all of them but all the datasets freely available
 on the internet will be automatically downloaded.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
improvement: the other too...
\end_layout

\end_inset


\end_layout

\begin_layout Standard
When the download is finished, the process check if the file is new.
 Only if the file is new, it will be moved in the directory checked by the
 parsing process of this particular source.
\end_layout

\begin_layout Description
Note there is one process for each source.
\end_layout

\begin_layout Subsubsection
Parsing the datasets
\end_layout

\begin_layout Standard
As we know, the new files are copied in a special directory, for each source.
 The parser check periodically this directory and if there is a new file,
 the new file will be parsed.
 
\end_layout

\begin_layout Standard
The parser will extract all the information of the datasets and put them
 into the database.
 
\end_layout

\begin_layout Description
Note as for the fetching, there is one process for each source.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
A description of all the actual modules is available
\begin_inset CommandInset ref
LatexCommand vpageref
reference "sub:Existing-modules"

\end_inset

.
 If you want to learn how to write a new module, please read
\begin_inset CommandInset ref
LatexCommand vpageref
reference "sub:Write-a-new"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
When the parsing is finished, the the system will automatically fetch the
 rest of the information he needs and there is neither futher module to
 write nor any other action to procede: the raw information is processed
 and computed automatically to generate the ranking and build the reports.
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
split getting ris/whois entries and the fetching 
\end_layout

\begin_layout Plain Layout
split the graphs 
\end_layout

\begin_layout Plain Layout
new subsection for
\end_layout

\begin_layout Plain Layout
- sorting 
\end_layout

\begin_layout Plain Layout
- getting ris/whois
\end_layout

\begin_layout Plain Layout
- fetching (ris)whois entries 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Getting the (RIS) Whois entries
\end_layout

\begin_layout Standard
This process does not do any network connexions with an other computer (redis
 is running on localhost).
 It will only ask to redis is there is the needed entry in the database
 and ask for it if not.
 If the entry is not found, the process ask periodically to redis if it
 is there.
 
\end_layout

\begin_layout Description
Note it is also multiprocessed but a little bit more complicated: each process
 getting RIS entries will recieve a certain interval of IPsDescriptions.
 This interval is based on the number of allowed processes (in the default
 configuration, it is 4) and the number of RIS entries to fetch.
 
\end_layout

\begin_deeper
\begin_layout Standard
There is also a limit to the size of the interval: this way it is possible
 to reduce the RAM usage without reducing the speed.
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename uml-diagramms/RIS Fetching.png
	lyxscale 50
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Get-RIS-Whois"

\end_inset

Get RIS Whois entries
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Getting the Whois entries
\end_layout

\begin_layout Standard
It is the same idea as for the RIS entries but there is a small difference:
 all the queries will not be done to the same server because the IPs are
 assigned to different whois server.
 It is also necessary to do the queries to the right server.
 
\end_layout

\begin_layout Standard
That is why there is a third service, it will dispatch the queries depending
 on the server: 
\end_layout

\begin_layout Itemize
The first service do the same as for the RIS entries.
 The queries it push have this format: 
\family typewriter
key = whois / query = <ip_address>
\end_layout

\begin_deeper
\begin_layout Standard
The queries it push have this format: 
\emph on
key = whois / query = <ip_address>
\end_layout

\end_deeper
\begin_layout Itemize
The second 
\end_layout

\begin_deeper
\begin_layout Itemize
pop periodically the queries of the sharing database (I) 
\end_layout

\begin_layout Itemize
find their assignation (II) (this part is explained
\begin_inset CommandInset ref
LatexCommand vpageref
reference "sub:Generation-index"

\end_inset

) and push it back into the sharing database(III).
 The format is now : 
\family typewriter
keys = <server> / query = <ip_address>
\end_layout

\begin_layout Itemize
push it back into the sharing database (III).
 
\end_layout

\begin_layout Standard
The format is now: 
\emph on
keys = <server> / query = <ip_address>
\end_layout

\end_deeper
\begin_layout Itemize
The third do the same as for the RIS entries.
 
\end_layout

\begin_layout Standard
At least one fetcher is started for each servers to query (you can configure
 this number in the config file).
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
enlargethispage{1cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways true
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename uml-diagramms/Whois Fetching.png
	lyxscale 50
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Get Whois entries
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Ranking
\end_layout

\begin_layout Subsubsection
Routing informations
\end_layout

\begin_layout Subsubsection
Computing
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
enlargethispage{1cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways true
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename global.dia
	lyxscale 30
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Technical-global-view"

\end_inset

Technical global view
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Known bugs and problems
\end_layout

\begin_layout Subsubsection
Importing old datasets
\begin_inset CommandInset label
LatexCommand label
name "sub:Importing-old-datasets"

\end_inset


\end_layout

\begin_layout Standard
It is possible but not totally implemented and we will have a nasty problem:
 the association between the IP and the ASN is based on the actual version
 of the RIS Whois database.
 This database evolve quite often.
 If we want to be able to import old data we need also to implement a module
 which will use the corresponding version of the BGP Routing table.
 
\end_layout

\begin_layout Standard
We will have the same problem (and the same solution) to compute the ranking.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
It is possible to solve this problem but it will be quite complicated.
 This functionality will be not implemented in a near future.
 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Libraries
\end_layout

\begin_layout Subsection
IPs Keys generator 
\begin_inset CommandInset label
LatexCommand label
name "sub:IPs-Keys-generator"

\end_inset


\end_layout

\begin_layout Subsubsection
Context
\end_layout

\begin_layout Standard
We have on one side a list of IP sets, each of them is connected to a particular
 information andon the other side IP addresses.
 
\end_layout

\begin_layout Standard
This library aims to provide a fast method to get the better information
 corresponting to this ip addresses.
 To find this information, we have to find the smallest set where the IP
 is.
\end_layout

\begin_layout Paragraph
Usage
\end_layout

\begin_layout Standard
The library need to know if we are working with IPv4 or IPv6 and the first
 and the last IP of the interval to compute.
 
\end_layout

\begin_layout Subsubsection
Example
\end_layout

\begin_layout Standard
The list of sets and corresponding informations: 
\end_layout

\begin_layout Itemize

\family typewriter
1.0.0.0 - 1.255.255.255 : Big provider
\end_layout

\begin_layout Itemize

\family typewriter
1.1.1.0 - 1.1.1.255 : Small provider
\end_layout

\begin_layout Itemize

\family typewriter
1.1.1.1 - 1.1.1.5 : Company selling websites
\end_layout

\begin_layout Standard
IP address : 
\family typewriter
1.1.1.3
\end_layout

\begin_layout Standard
This ip address is in all the sets but the most accurate information is
 that it is owned by the company selling websites.
\end_layout

\begin_layout Subsubsection
Algorithm
\end_layout

\begin_layout Paragraph
First idea 
\end_layout

\begin_layout Standard
Push all the IPv4 and IPv6 in the database.
\end_layout

\begin_layout Subparagraph
Pros
\end_layout

\begin_layout Itemize
Easy 
\end_layout

\begin_layout Itemize
Fast: acces to the informations in O(1)
\end_layout

\begin_layout Subparagraph
Cons
\end_layout

\begin_layout Itemize
there is about 
\begin_inset Formula $4,3\cdot10^{9}$
\end_inset

 IPv4 and about 
\begin_inset Formula $3,4·10^{38}$
\end_inset

 IPv6, it is impossible to push in the database all the IPv4 (and obviously
 IPv6)
\end_layout

\begin_layout Paragraph
Second idea
\end_layout

\begin_layout Standard
To reduce drastically the number of keys, the easiest solution is to push
 in the database the first and the last element of the interval.
\end_layout

\begin_layout Subparagraph
Pros
\end_layout

\begin_layout Itemize
Easy
\end_layout

\begin_layout Itemize
Few keys
\end_layout

\begin_layout Subparagraph
Cons
\end_layout

\begin_layout Itemize
Huge amount of queries to redis: we have to find the best interval...
 
\end_layout

\begin_deeper
\begin_layout Standard
And it can take some time: in the worst case, it will be O(n) with n the
 number of IPs in the interval.
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ipkeys1.dia
	lyxscale 50
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
IPs Keys generator 1
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We have to do a query for each IP until we find the interval containing
 our IP.
 Even if we are able to jump the intermediate networks, it will take too
 much time for a network like 1.0.0.0/8 with more than 
\begin_inset Formula $16\text{·}10^{6}$
\end_inset

 IPs.
\end_layout

\begin_layout Paragraph
Third Idea 
\end_layout

\begin_layout Standard
The keys saved in redis are strings, the easiest way was to find a way based
 on the representation of an IP address.
 
\end_layout

\begin_layout Standard
For the first and the last IP of an interval, we will split the address
 with the .
 (IPv4) or the : (IPv6), find the equal part and push it into the database.
 The value of this key will be the following: 
\emph on
<integer representation of the first IP of the interval>_<integer representation
 of the last IP of the interval>
\emph default
 and be used to ensure that the IP of the query is really in this interval.
 
\end_layout

\begin_layout Example
Generate a key for an easy interval 
\end_layout

\begin_layout Example
Interval: 1.1.1.0 - 1.1.1.255
\end_layout

\begin_layout Example
Equal Part: 1.1.1
\end_layout

\begin_layout Example
Value: 16843008_16843263
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Example
Generate a key for a more complex interval 
\end_layout

\begin_layout Example
Interval: 1.1.1.0 - 1.1.5.255
\end_layout

\begin_layout Example
Equal Part: 1.1
\end_layout

\begin_layout Example
But be want more precision, the key will be the following: 1.1.{1-5} => 5
 keys
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Example
Generate a key for a very compley interval
\end_layout

\begin_layout Example
Interval: 1.2.3.0 - 1.4.5.255
\end_layout

\begin_layout Example
Equal Part: 1
\end_layout

\begin_layout Example
The key will be the following: 1.2.{3-255}, 1.3, 1.4.{0-5} => 252+1+6 = 259 keys
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subparagraph
IPv6
\end_layout

\begin_layout Standard
the idea is the same but the intervals are usually big and there is never
 such intervals as in the third example, we always push intervals like in
 the first and second example, usually only like the second example.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
To get the smallest interval, we will split the IP address in the same way
 and begin to get the longest possible key.
 
\end_layout

\begin_layout Example
For the IP 
\family typewriter
1.1.1.1
\family default
, we will begin with 
\family typewriter
1.1.1
\family default
 then 
\family typewriter
1.1
\family default
 and finally 
\family typewriter
1
\family default
.
\end_layout

\begin_layout Standard
The second problem is that we will sometime have more than one value at
 a key: in IPv4, a lot of intervals are smallest than a /24.
 We may have the same problem in IPv6 in the future and to be scalable,
 it is allready implemented: we have to be able to find the smallest network
 within a set of intervals.
 
\end_layout

\begin_layout Standard
To do it, we just have to split the values, check if the IP in in this interval.
 When one if found, we have to verify that there is no other smallest network
 containing the IP.
\end_layout

\begin_layout Subparagraph
Pros
\end_layout

\begin_layout Itemize
Fast: the key will be find in O(3) for IPv4 and O(7) for IPv6.
 After that, we have to find the right interval in the set but it is just
 a comparison of a small number of values and goes very fast.
 
\end_layout

\begin_layout Itemize
Few keys
\end_layout

\begin_layout Subparagraph
Cons
\end_layout

\begin_layout Itemize
More complicated 
\end_layout

\begin_layout Subsection
File splitting
\end_layout

\begin_layout Subsubsection
Context
\end_layout

\begin_layout Standard
One of the requirements is that the system has to to allow mapreduce-like
 processing.
 The problem with files is that it is not possible to parse it with more
 than one process at the same time.
 It would be great to be able to split a big file into smaller one and launch
 differents processes on this files.
 That is the aim of this library.
 It has also to be included in an existing code and should be as transparent
 as possible.
 
\end_layout

\begin_layout Paragraph
Usage 
\end_layout

\begin_layout Standard
The library only need a file to split, the number of files to generate and
 the separator.
 
\end_layout

\begin_layout Subsubsection
Example
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
TODO
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Algorithm 
\end_layout

\begin_layout Paragraph
Separator
\end_layout

\begin_layout Standard
The separator is used to split the file at a particular point: there is
 usually blocks in the files we want to split and we cannot cut the files
 within this blocks.
 usualy it is a 
\family typewriter
'
\backslash
n'
\family default
:
\end_layout

\begin_layout Paragraph
Splitting
\end_layout

\begin_layout Standard
First, we get the size of the file and divide it by the number of files
 we want.
 
\end_layout

\begin_layout Standard
To split we just 
\begin_inset Quotes eld
\end_inset

jump
\begin_inset Quotes erd
\end_inset

 of the size we compute and look for the next separator.
 The data in the interval is finally copied in a new file.
\end_layout

\begin_layout Standard
When the end of the file is reached, we return the list of generated files.
 The original file is not removed.
 
\end_layout

\begin_layout Subsection
Whois Client
\end_layout

\begin_layout Subsubsection
Initialisation 
\end_layout

\begin_layout Standard
It is a bit more complicated: I implement a whois client based on the assignatio
ns given by the whois package of Debian/Ubuntu to ask the whois entries
 to the right server.
\end_layout

\begin_layout Standard
The following information are saved in a Redis database:
\end_layout

\begin_layout Itemize
block: the IPs assigned to the server
\end_layout

\begin_layout Itemize
whois: the URL of the server 
\end_layout

\begin_layout Itemize
port: port on the server 
\end_layout

\begin_layout Itemize
options: 
\end_layout

\begin_deeper
\begin_layout Itemize
pre: prefix of the query 
\end_layout

\begin_layout Itemize
post: string appended to the query 
\end_layout

\begin_layout Itemize
keepalive: other prefix, make the query keepalive (the server doesn't close
 the connexion after each query)
\end_layout

\end_deeper
\begin_layout Subsubsection
Usage
\end_layout

\begin_layout Paragraph
Finding the best range
\end_layout

\begin_layout Standard
The ranges are saved into redis using the library described earlier 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:IPs-Keys-generator"

\end_inset

.
 How to get the best range and with it the right server is described there.
\end_layout

\begin_layout Standard
One process will do this job and put the IPs in the queues of their servers.
 
\end_layout

\begin_layout Paragraph
Fetching
\end_layout

\begin_layout Standard
There is one other process for each server found in the assignations file.
 This process has a queue initialized by the sorting process we just describe.
 Using the informations put in the database during the initialisation, we
 establish a connection to the server and fetch the entry.
 If possible, the connection is not closed but very few servers authorize
 it, slowing a lot the process.
 That's why we have also a proper whois server 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Whois-server"

\end_inset

.
\end_layout

\begin_layout Subsection
Whois Parser
\end_layout

\begin_layout Subsubsection
Abstract part
\end_layout

\begin_layout Subsubsection
Implementation 
\end_layout

\begin_layout Section
Modules 
\begin_inset CommandInset label
LatexCommand label
name "sec:Modules"

\end_inset


\end_layout

\begin_layout Subsection
Abstract part
\end_layout

\begin_layout Subsection
Features
\end_layout

\begin_layout Subsubsection
Configuration
\end_layout

\begin_layout Standard
All the configuration is defined in 
\emph on
etc/bgp-ranking.conf
\emph default
.
 You can almost configure all the system.
 More details in the file itself.
 
\end_layout

\begin_layout Subsubsection
Modularity 
\end_layout

\begin_layout Standard
You can run each initscript in the order you want: they are all 
\series bold
totally independent
\series default
.
 An example: Obviously the parsing will not be done until the files are
 fetched but if the parsing service has nothing to do, it will just wait
 a certain amount of seconds (defined in the configuration file) and check
 again if there is something to do.
 
\end_layout

\begin_layout Standard
Because the sharing of the information between the services is done using
 Redis it is possible to run each part of the system on a different computer.
 
\end_layout

\begin_layout Subsubsection
Multiprocessing
\end_layout

\begin_layout Standard
Except the fetching of the datasets, each part of the system support multiproces
sing: for each service, you can configure the number of process in the configura
tion file.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
What is multiprocessed
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Existing modules 
\begin_inset CommandInset label
LatexCommand label
name "sub:Existing-modules"

\end_inset


\end_layout

\begin_layout Subsubsection
Dshield
\end_layout

\begin_layout Standard
Dshiels provide two lists:
\end_layout

\begin_layout Itemize
a list containing the 100 most reported IPs with sometime a reverse dns.
 The reverse DNS are saved in the database because they may be useful to
 trace the evolution of a particular IP 
\end_layout

\begin_layout Itemize
the daily sources which contains ~1.000.000 IPs, probably many false positive
 entries but it is at least useful to stress-test the application :)
\end_layout

\begin_layout Subsubsection
Zeustracker
\end_layout

\begin_layout Standard
Zeus provide a list to track the ZeuS Command&Control servers and malicious
 hosts which are hosting ZeuS files.
 It is just a list of IPs.
 
\end_layout

\begin_layout Subsubsection
Atlas
\end_layout

\begin_layout Standard
Active Threat Level Analysis System is a list provided by Arbor which contains
 many information on the type of the alert.
 The format of the report is a RSS feed.
 The reports are not freely available.
 
\end_layout

\begin_layout Subsubsection
Shadowserver
\end_layout

\begin_layout Standard
Shadowserver provide three lists containing about the same information as
 atlas but are CSV files.
 Of course, the three reports are slightly different and need three different
 parsers...
 :) The reports are not freely available.
 
\end_layout

\begin_layout Subsection
Write a new module
\begin_inset CommandInset label
LatexCommand label
name "sub:Write-a-new"

\end_inset


\end_layout

\begin_layout Standard
Each dataset needs a proper module to extract the needed information.
 You can already take a look at the existing modules.
\end_layout

\begin_layout Standard
Every module has his requirements:
\end_layout

\begin_layout Itemize
Unique name: a module is a class, it is obvious that two class with the
 same name will be a problem...
 
\end_layout

\begin_layout Itemize
The variable name has to be unique too: it is used in the database to trace
 the origin of the entry.
 
\end_layout

\begin_layout Itemize
The variable directory: it is the directory where the script checks periodically
 if there is a new file.
\end_layout

\begin_layout Standard
There are actually two types of modules : 
\end_layout

\begin_layout Subsubsection
First type (Dshield and Zeustracker)
\end_layout

\begin_layout Standard
The freely available datasets contains the IP addresses and sometimes a
 reverse dns but this information is so easily falsified that it is totally
 unnecessary to save it.
 The dataset may contain the date of generation of the report, it will be
 extracted too.
\end_layout

\begin_layout Standard
This type require:
\end_layout

\begin_layout Itemize
The function parse: extract the IPs 
\end_layout

\begin_layout Itemize
A variable datetime: if possible extracted of the file.
 If there is no date in the file, the date will be set to 'today' (datetime.date.t
oday()).
 
\end_layout

\begin_layout Itemize
The variable module_type set to 1
\end_layout

\begin_layout Subsubsection
Second type (Atlas and Shadowserver)
\end_layout

\begin_layout Standard
The reports provide more information on the attackers.
 They provide obviously the ip but also the time of the attack, and the
 attack (the name of the malware, if known).
 Atlas provide some more information such as an URL to get more information,
 the coverage time and category of the attack.
 But the atlas report is an XML file, this information are extracted of
 the file and saved as a string in the database.
 Shadowserver is a CSV report, the whole line will be pushed in the database.
\end_layout

\begin_layout Standard
This type require:
\end_layout

\begin_layout Itemize
The Function parse which return a table of table with each line like: [IP,
 date, infection, rest of the line] 
\end_layout

\begin_layout Itemize
The variable module_type set to 2
\end_layout

\begin_layout Subsubsection
Automation
\end_layout

\begin_layout Enumerate
Edit lib/modules/__init__.py and append the module to import 
\end_layout

\begin_layout Enumerate
Edit etc/bgp-ranking.conf and append the name of your new class to the item
 modules_to_parse
\end_layout

\begin_layout Standard
All the files you put into directory will be automatically parsed.
 It is (of course) possible to automatize this process: you just need to
 edit etc/bgp-ranking.conf and add in the section raw_fetching an entry like:
\end_layout

\begin_layout LyX-Code
uniq_name = module directory URL
\end_layout

\begin_layout Standard
Now your dataset will be automatically fetched and parsed.
 
\end_layout

\begin_layout Section
Third party programms
\end_layout

\begin_layout Subsection
Redis 
\end_layout

\begin_layout Standard
config + explanations
\end_layout

\begin_layout Standard
ram usage 
\end_layout

\begin_layout Standard
-> vm ? yes/not
\end_layout

\begin_layout Standard
config 
\end_layout

\begin_layout Standard
-> auto save
\end_layout

\begin_layout Subsection
Rgraph
\end_layout

\begin_layout Standard
why 
\end_layout

\begin_layout Section
Information
\end_layout

\begin_layout Standard
What the application do when all the information we want/need are extracted
 of the datasets.
 We will fetch the RIS Whois and the Whois entries for each IP but it is
 not that easy! 
\end_layout

\begin_layout Subsection
Dataset
\end_layout

\begin_layout Standard
infection -> interesting to know the evolution 
\end_layout

\begin_layout Standard
all the line -> why are we saving the whole line ? whole line savent in
 csv formal => easy to reread & extract 
\end_layout

\begin_layout Subsection
RIS Whois
\end_layout

\begin_layout Standard
The RIS information are fetched from 
\emph on
riswhois.ripe.net
\emph default
 to know who is announcing the network of the IP.
\end_layout

\begin_layout Standard
From the response, we extract:
\end_layout

\begin_layout Itemize
the origin, which is the AS announcing the IP 
\end_layout

\begin_layout Itemize
the route 
\end_layout

\begin_layout Itemize
the description of the ASN
\end_layout

\begin_layout Standard
The query server is also saved: it is the URL of the server where we do
 the query.
 It is actually always 
\emph on
riswhois.ripe.net
\emph default
 but in the future, we may directly use a BGP session on a router.
 We will have to be able to know where the information are coming from.
\end_layout

\begin_layout Standard
If there is no response, we assume that the ip is not announced any more.
 If the IP is RESERVED or PRIVATE, it will be discarded before the inclusion
 in the database: it is for sure a false positive.
\end_layout

\begin_layout Subsection
Whois
\end_layout

\begin_layout Standard
As for the RIS Whois, the URL of the server is saved in the database.
 
\end_layout

\begin_layout Standard
The rest of the Whois entry is directly pushed in the database.
 There are two problems:
\end_layout

\begin_layout Itemize
the time: it takes ~1sec to get a whois entry 
\end_layout

\begin_layout Itemize
the number of queries: the RIR Afrinic blacklists the ip address which make
 too much queries
\end_layout

\begin_layout Standard
This problems will be solved by using a local Whois server 
\end_layout

\begin_layout Section
Whois server
\begin_inset CommandInset label
LatexCommand label
name "sec:Whois-server"

\end_inset


\end_layout

\begin_layout Subsection
Generation of the index 
\begin_inset CommandInset label
LatexCommand label
name "sub:Generation-index"

\end_inset


\end_layout

\begin_layout Standard
It is the most challenging part of the whois server: it 
\series bold
has to be faster
\series default
 than the querying through the Internet! 
\end_layout

\begin_layout Section
Websites
\end_layout

\begin_layout Subsection
Used technologies 
\end_layout

\begin_layout Standard
Cheetah and cherry-py
\end_layout

\begin_layout Part
Usage
\end_layout

\begin_layout Section
Installation
\end_layout

\begin_layout Section
Launch
\end_layout

\begin_layout Standard
You can run each initscript in the order you want: they are all 
\series bold
totally independent
\series default
.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
An example: Obviously the parsing will not be done until the files are fetched
 but if the parsing service has nothing to do, it will just wait a certain
 amount of seconds (defined in the configuration file) and check again if
 there is something to do.
 
\end_layout

\begin_layout Standard
Because the sharing of the information between the services is done using
 Redis it is possible to run each part of the system on computer, in a cloud.
 
\end_layout

\begin_layout Standard
More informations on redis on the official website
\begin_inset CommandInset citation
LatexCommand cite
key "redis_official"

\end_inset


\end_layout

\begin_layout Standard
Except the fetching of the datasets, each part of the system support multiproces
sing: for each service, you can configure the number of process in the configura
tion file.
 
\end_layout

\begin_layout Part
Ranking
\end_layout

\begin_layout Standard
There is three type of ranking in the system, the first is public and a
 global overview of the Internet 
\end_layout

\begin_layout Section
Different types of rankings
\end_layout

\begin_layout Subsection
Global Ranking
\end_layout

\begin_layout Standard
It is a global overview of the Internet: all the sources are aggregated
 and merged in a global view.
 Every 24 hours, an index is generated...
\end_layout

\begin_layout Subsection
ISP Ranking
\end_layout

\begin_layout Standard
same with weight givem by the ISPs
\end_layout

\begin_layout Subsection
Private Ranking
\end_layout

\begin_layout Standard
totally private, the weight of the source can be changed, it is possible
 to vote for all the ISP you want
\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Section
Interpretation
\end_layout

\begin_layout Part
Improvements and future usage
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "AS"
description "The classic definition of an Autonomous System is a set of routers under a single technical administration, using an interior gateway protocol (IGP) and common metrics to determine how to route packets within the AS, and using an inter-AS routing protocol to determine how to route packets to other ASes. Since this classic definition was developed, it has become common for a single AS to use several IGPs and, sometimes, several sets of metrics within an AS. The use of the term Autonomous System stresses the fact that, even when multiple IGPs and metrics are used, the administration of an AS appears to other ASes to have a single coherent interior routing plan, and presents a consistent picture of the destinations that are reachable through it. (RFC 4271)\\\\\\\\Shortly, an AS manages one or more prefixes and propagates all the prefixes he knows to the other ASes.\\\\\\\\Each AS is uniquely identified by an Autonomous System Number."

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "ASN"
description "Autonomous System Number it is a unique 16-bit number associated with one or more prefix(es)."

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Prefix"
description "it is a network represented like this: first ip of the network/bit-length of the prefix\\\\Example: 192.168.0.0/24"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "ISP"
description "Internet Service Provider it has at least one autonomous system number (ASN) with or without prefixes announced. "

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "SO"
description "Satellite operator it is an ISP which provide an Internet access through satellites. "

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Data source"
description "it is the entity/company/person which provide a dataset. "

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Dataset"
description "it contains the most important part of the information used by the ranking system."

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Whois entry"
description "the information given by a whois server when the system do a query on a particular IP. "

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "C\\&C"
description "Command and Control it is the infrastructure used by the bot master to control his botnet."

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Botnet"
description "itis a group of computers used by criminal entities for nefarious purposes.\\\\"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Bot Master"
description "it is the person or the entity which control the botnet."

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Malware"
description "All the nefarious softwares which can installed on a system."

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Peering"
description "exchange of traffic between ISPs, it is the base of the internet which makes the whole system working"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "IANA"
description "The Internet Assigned Numbers Authority is the global entity controlling the assignation of IP addresses, AS numbers, Top-Level domains, and all IP related assignments."

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "RIR"
description "The Regional Internet Registries manage the AS numbers and IPs assignations in their zones."

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
printnomenclature[0.8in]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "AS"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "RFC 4271"
target "http://ftp.rfc-editor.org/in-notes/rfc4271.txt"

\end_inset

: A Border Gateway Protocol 4 (BGP-4)
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Overview"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "Exploring Autonomous System Numbers"
target "http://www.cisco.com/web/about/ac123/ac147/archived_issues/ipj_9-1/autonomous_system_numbers.html"

\end_inset

 by Geoff Huston, APNIC in the The Internet Protocol Journal - Volume 9,
 Number 1 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "BGP Ranking"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "BGP AS / ISP Security Ranking"
target "http://gitorious.org/bgp-ranking"

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Flowspec"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "RFC 5575"
target "http://ftp.rfc-editor.org/in-notes/rfc5575.txt"

\end_inset

: Dissemination of Flow Specification Rules 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "art_peering"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "The Art of Peering: The Peering Playbook"
target "http://www.blogg.ch/uploads/peering-playbook.pdf"

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "peering_transit"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "How the 'Net works: an introduction to peering and transit"
target "http://arstechnica.com/old/content/2008/09/peering-and-transit.ars"

\end_inset

 - Ars Technica
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "SQLAlchemy-dbs"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "SQLAlchemy - Supported Databases"
target "http://www.sqlalchemy.org/docs/dbengine.html#supported-databases"

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "active-record"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "Active record pattern"
target "https://secure.wikimedia.org/wikipedia/en/wiki/Active_record_pattern"

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Mapreduce"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "MapReduce"
target "https://secure.wikimedia.org/wikipedia/de/wiki/MapReduce"

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "redis_official"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "Redis Official Website "
target "https://code.google.com/p/redis/"

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "BGP-policies"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "BGP Policies"
target "www.cs.princeton.edu/~jrex/papers/policies.pdf"

\end_inset

 - Matthew Caesar and Jennifer Rexford 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "p2p-botnet"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "P2P Botnet"
target "http://honeyblog.org/archives/44-Walowdac-Analysis-of-a-Peer-to-Peer-Botnet.html"

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "RIS"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "Routing Information Service"
target "http://www.ripe.net/projects/ris/index.html"

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Dshield-about"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "About Dshield"
target "http://www.dshield.org/about.html"

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Shadowserver-mission"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "Shadowserver Mission"
target "http://www.shadowserver.org/wiki/pmwiki.php/Shadowserver/Mission"

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Arbor-faq"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "FAQ Arbor"
target "https://atlas.arbor.net/faq/"

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "ZeuS-faq"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "FAQ ZeuS"
target "https://zeustracker.abuse.ch/faq.php"

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "non-profit-malware"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "Kaspersky Security Bulletin 2007"
target "http://www.kaspersky.com/reading_room?chapter=207716662"

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "sell botnet"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "Botnet price for hourly hire on par with cost of two pints"
target "http://www.zdnet.co.uk/news/security-threats/2010/05/25/botnet-price-for-hourly-hire-on-par-with-cost-of-two-pints-40089028/"

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "blackhole-malware"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "Blackhole your malware"
target "http://www.theregister.co.uk/2010/08/13/sysadmin_black_hole/"

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "mongodb-agpl"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "Why AGPLv3 - MongoDb"
target "http://blog.mongodb.org/post/103832439/the-agpl"

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "divert_filter"

\end_inset

http://www.faqs.org/docs/Linux-mini/Divert-Sockets-mini-HOWTO.html#s4
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "ingress_filter"

\end_inset

http://www.ietf.org/rfc/rfc2827.txt
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Redis-types"

\end_inset

https://code.google.com/p/redis/wiki/IntroductionToRedisDataTypes
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\start_of_appendix
Example of BGP Entry : 
\begin_inset CommandInset label
LatexCommand label
name "Example-of-BGP"

\end_inset


\end_layout

\begin_layout Standard
TIME: 07/19/10 08:00:00 
\end_layout

\begin_layout Standard
TYPE: TABLE_DUMP_V2/IPV4_UNICAST 
\end_layout

\begin_layout Standard

\series bold
PREFIX: 41.138.240.0/21 
\end_layout

\begin_layout Standard
SEQUENCE: 10022 
\end_layout

\begin_layout Standard
FROM: 91.103.24.2 AS42109 
\end_layout

\begin_layout Standard
ORIGINATED: 07/18/10 23:36:39 
\end_layout

\begin_layout Standard
ORIGIN: IGP 
\end_layout

\begin_layout Standard

\series bold
ASPATH: 42109 41965 41877 3356 174 42652 12684 12684 
\end_layout

\begin_layout Standard

\series bold
NEXT_HOP: 91.103.24.2 
\end_layout

\begin_layout Standard
COMMUNITY: 3356:2 3356:22 3356:86 3356:503 3356:666 3356:2067 
\end_layout

\begin_layout Standard

\lyxline

\end_layout

\end_body
\end_document
